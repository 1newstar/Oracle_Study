--多表连接查询
--必会:内连接(等值连接/非等值连接),外连接(左外连接/右外连接),自连接
--等值连接和非等值连接的区别:过滤条件是否包含不等号
--内连接:等值/非等值
--外连接:左外/右外

--一.内连接:合并具有同一列的两个以上的表的行,结果集中不包含一个表与另一个表不匹配的行
--1.等值连接
SELECT *
  FROM EMPLOYEES EMP, DEPARTMENTS DEP
 WHERE EMP.DEPARTMENT_ID = DEP.DEPARTMENT_ID;

SELECT *
  FROM EMPLOYEES EMP, DEPARTMENTS DEP, LOACTIONS LOC
 WHERE EMP.DEPARTMENT_ID = DEP.DEPARTMENT_ID
   AND DEP.LOCATION_ID = LOC.LOCATION_ID;

--2.非等值连接 (为了便于理解，引入了job_grades表，但是数据库中并没有这张表)
SELECT *
  FROM EMPLOYEES EMP, JOB_GRADES JG
 WHERE EMP.SALARY BETWEEN JG.LOW_SAL AND JG.HIGH_SAL;

--二.外连接:两个表在连接过程中出了返回满足连接条件的行以外,还返回左/右表中不满足条件的行这种连接称为左/右外连接
--emp.a(+)=emp.b 右外连接
--emp.a=dep.b(+) 左外连接
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID IS NULL;
SELECT *
  FROM EMPLOYEES EMP, DEPARTMENTS DEP
 WHERE EMP.DEPARTMENT_ID = DEP.DEPARTMENT_ID;

--emp.a(+)=dep.b(+):不仅返回左表中不满足条件的行还会返回右表中不满足条件的行,此时这么写编译器是会报错的,
--正确的打开方式是使用SQL1999语法(即...join ... on ...)
--SQL1999的写法如下
--1.交叉连接,其结果相当于笛卡尔乘积
SELECT EMP.EMPLOYEE_ID, EMP.LAST_NAME, DEP.DEPARTMENT_NAME
  FROM EMPLOYEES EMP
 CROSS JOIN DEPARTMENTS DEP;
--2.自然连接,自动匹配每一个表中所有相同的属性进行连接
SELECT EMP.EMPLOYEE_ID, EMP.LAST_NAME, DEP.DEPARTMENT_NAME
  FROM EMPLOYEES EMP NATURAL
  JOIN DEPARTMENTS DEP;
--3.内连接
SELECT EMPLOYEES.EMPLOYEE_ID,
       EMPLOYEES.LAST_NAME,
       DEPARTMENTS.DEPARTMENT_NAME
  FROM EMPLOYEES
  INNER JOIN DEPARTMENTS
 USING (DEPARTMENT_ID);
--a.两张表连接
SELECT EMP.EMPLOYEE_ID, EMP.LAST_NAME, DEP.DEPARTMENT_NAME
  FROM EMPLOYEES EMP
  INNER JOIN DEPARTMENTS DEP
    ON EMP.DEPARTMENT_ID = DEP.DEPARTMENT_ID;
--b.三张表连接
SELECT EMP.EMPLOYEE_ID, EMP.LAST_NAME, DEP.DEPARTMENT_NAME, LOC.LOCATION_ID
  FROM EMPLOYEES EMP
  INNER JOIN DEPARTMENTS DEP
    ON EMP.DEPARTMENT_ID = DEP.DEPARTMENT_ID
  INNER JOIN LOCATIONS LOC
    ON DEP.LOCATION_ID = LOC.LOCATION_ID;
--4.外连接
--左外连接
SELECT EMP.EMPLOYEE_ID, EMP.LAST_NAME, DEP.DEPARTMENT_NAME
  FROM EMPLOYEES EMP
  LEFT OUTER JOIN DEPARTMENTS DEP
    ON EMP.DEPARTMENT_ID = DEP.DEPARTMENT_ID;
--右外连接
SELECT EMP.EMPLOYEE_ID, EMP.LAST_NAME, DEP.DEPARTMENT_NAME
  FROM EMPLOYEES EMP
 RIGHT OUTER JOIN DEPARTMENTS DEP
    ON EMP.DEPARTMENT_ID = DEP.DEPARTMENT_ID;

--全外连接
SELECT EMP.EMPLOYEE_ID, EMP.LAST_NAME, DEP.DEPARTMENT_NAME
  FROM EMPLOYEES EMP
  FULL OUTER JOIN DEPARTMENTS DEP
    ON EMP.DEPARTMENT_ID = DEP.DEPARTMENT_ID;

--三.自连接
--查询员工Chen的manager的信息
SELECT man.*
  FROM EMPLOYEES EMP, EMPLOYEES MAN
 WHERE EMP.MANAGER_ID = MAN.EMPLOYEE_ID AND LOWER(emp.last_name)='chen';


--数据库数据
SELECT * FROM USER_TABLES;
SELECT * FROM EMPLOYEES;
SELECT * FROM DEPARTMENTS;
SELECT * FROM LOCATIONS;
SELECT * FROM JOBS;
SELECT * FROM JOB_HISTORY;
SELECT * FROM REGIONS;
SELECT * FROM COUNTRIES;
